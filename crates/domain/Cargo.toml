# axum_hexagonal_template/crates/domain/Cargo.toml

[package]
name = "domain"
version = "0.1.0"
edition = "2021"
publish = false # Prevent accidental publishing
authors = ["Your Name <your.email@example.com>"] # 建議填寫你的名字和郵箱
description = "Contains core business logic, entities, and domain-specific errors. It should be pure and framework-agnostic."
repository = "https://github.com/your-username/axum_hexagonal_template" # 建議填寫你的項目倉庫
license = "MIT OR Apache-2.0" # 選擇一個合適的開源許可證，或移除

[lib]
path = "src/lib.rs"

[lints]
workspace = true

[dependencies]
# Domain 層保持零外部依賴，實現真正的純淨核心
# 所有錯誤處理、ID 生成等都使用純 Rust 標準庫實現

# `itertools` 提供了一些方便的迭代器適配器和實用函數，通常是純運算。
# 根據實際需要選擇是否包含。
# itertools = "0.12.0"

# `chrono` 用於處理時間，但如果 Domain 只需 Unix timestamp 或 Duration，
# 考慮使用更輕量級的 `time` crate 或直接 `u64`。
# 如果確定 Domain 需要處理日期時間物件，且不介意其大小，則可以包含。
# chrono = { version = "0.4.34", features = ["serde"] } # 建議關閉 serde，如果需要序列化，在 DTOs 層處理

# 如果 Domain 層需要任何其他純計算、無副作用、無 I/O 的數學或資料結構庫，可以在此添加。